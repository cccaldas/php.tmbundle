<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple Computer//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string># This command passes the script to Ruby via a heredoc, rather than using a shebang.
# The reason for this is so that .textmate_init is sourced, which IMO is the nicest place to set PHP_INCLUDE_PAT
# However passing the heredoc axes the document STDIN from TextMate, so here we redirect the original STDIN to
# file descriptor 3, to be later read from the Ruby script
ruby 3&gt;&amp;0 &lt;&lt;-'RUBY'
  require ENV["TM_SUPPORT_PATH"] + "/lib/ui.rb"
  require ENV["TM_SUPPORT_PATH"] + "/lib/textmate.rb"

  options = []

  if ENV['TM_CURRENT_LINE'] =~ /(?:include|require)(?:_once)?\s*\(?\s*?['"](.+)['"]\s*\)?/
    options &lt;&lt; $1
  else
    IO.open(3, 'r') do |document| # This reads the TextMate document from file descriptor 3, as describe above
      document.read.scan(/(?:include|require)(?:_once)?\s*\(?\s*?['"](.+)['"]\s*\)?/).each do |path|
        options &lt;&lt; path[0] unless path[0].include?('$') # Skip dynamic includes
      end
    end
  end

  abort "No includes found" if options.empty?

  file = ''
  if options.size &gt; 1
    abort unless choice = TextMate::UI.menu(options)
    file = options[choice]
  else
    file = options.pop
  end

  paths = []
  if ENV['PHP_INCLUDE_PATH']
    paths = ENV['PHP_INCLUDE_PATH'].split(':')
  else
    paths = ['.']
  end

  paths.each do |path|
    expanded_path = File.expand_path(file, path)
    if File.exists?(expanded_path)
      TextMate.go_to :file =&gt; expanded_path
      exit
    end
  end
  puts "File not found: #{file}"
  puts "Set PHP_INCLUDE_PATH for best results" unless ENV['PHP_INCLUDE_PATH']
RUBY
</string>
	<key>input</key>
	<string>document</string>
	<key>keyEquivalent</key>
	<string>@D</string>
	<key>name</key>
	<string>Jump to Included File</string>
	<key>output</key>
	<string>showAsTooltip</string>
	<key>scope</key>
	<string>source.php</string>
	<key>uuid</key>
	<string>B3E79B47-40E9-4EF9-BAD9-11FEEE0D238F</string>
</dict>
</plist>
